{"ast":null,"code":"var _jsxFileName = \"/Users/matthewcafiero/PersonalProjects/MemoryBox/frontend/src/components/NewEntryForm.tsx\",\n  _s = $RefreshSig$();\n// Form.tsx\n\nimport React, { useState } from 'react';\nimport SubmitFormButton from './SubmitFormButton';\nimport axios from 'axios';\n\n// Define props for the Form component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// Reusable Form component\nconst NewEntryForm = ({\n  children,\n  ...rest\n}) => {\n  _s();\n  const [formData, setFormData] = useState({\n    message: ''\n  });\n  async function handleSubmit(event) {\n    event.preventDefault();\n    try {\n      const response = await axios.post('/api/user', formData);\n      if (response.status === 200) {\n        // Reset form after successful submission\n        setFormData({\n          message: ''\n        });\n        alert('Form submitted successfully');\n      } else {\n        throw new Error('Failed to submit form');\n      }\n    } catch (error) {\n      console.error('Error submitting form:', error.message);\n      alert('Failed to submit form. Please try again later.');\n    }\n  }\n  ;\n  function handleChange(event) {\n    const {\n      name,\n      value\n    } = event.target;\n    setFormData(prevState => ({\n      ...prevState,\n      [name]: value\n    }));\n    console.log(formData);\n  }\n  ;\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), children, /*#__PURE__*/_jsxDEV(SubmitFormButton, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(NewEntryForm, \"/uSsHYQS04pV5S7BLPo8HhSNDPs=\");\n_c = NewEntryForm;\nexport default NewEntryForm;\nvar _c;\n$RefreshReg$(_c, \"NewEntryForm\");","map":{"version":3,"names":["React","useState","SubmitFormButton","axios","jsxDEV","_jsxDEV","NewEntryForm","children","rest","_s","formData","setFormData","message","handleSubmit","event","preventDefault","response","post","status","alert","Error","error","console","handleChange","name","value","target","prevState","log","onSubmit","type","onChange","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/matthewcafiero/PersonalProjects/MemoryBox/frontend/src/components/NewEntryForm.tsx"],"sourcesContent":["// Form.tsx\n\nimport React, { FormHTMLAttributes, useState } from 'react';\nimport SubmitFormButton from './SubmitFormButton';\nimport {NewDataEntry} from  '../../../types';\nimport axios from 'axios';\n\n// Define props for the Form component\ntype props = FormHTMLAttributes<HTMLFormElement> & {};\n\n// Reusable Form component\nconst NewEntryForm: React.FC<props> = ({ children, ...rest }) => {\n  const [formData, setFormData] = useState<NewDataEntry>({\n    message: ''\n  });\n  \n  async function handleSubmit (event: React.FormEvent<HTMLFormElement>) {\n    event.preventDefault();\n  \n    try {\n      const response = await axios.post('/api/user', formData);\n\n      if (response.status === 200) {\n        // Reset form after successful submission\n        setFormData({ message: '' });\n        alert('Form submitted successfully');\n      } else {\n        throw new Error('Failed to submit form');\n      }\n    } catch (error:any) {\n      console.error('Error submitting form:', error.message);\n      alert('Failed to submit form. Please try again later.');\n    }\n  };\n  \n  function handleChange (event: React.ChangeEvent<HTMLInputElement>) {\n    const { name, value } = event.target;\n    setFormData(prevState => ({\n      ...prevState,\n      [name]: value\n    }));\n    console.log(formData);\n  };\n\n  return (\n    <form onSubmit={handleSubmit} >\n      <input type=\"text\" onChange={handleChange}/>\n      {children}\n      <SubmitFormButton></SubmitFormButton>\n    </form>\n  );\n};\n\nexport default NewEntryForm;\n"],"mappings":";;AAAA;;AAEA,OAAOA,KAAK,IAAwBC,QAAQ,QAAQ,OAAO;AAC3D,OAAOC,gBAAgB,MAAM,oBAAoB;AAEjD,OAAOC,KAAK,MAAM,OAAO;;AAEzB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAGA;AACA,MAAMC,YAA6B,GAAGA,CAAC;EAAEC,QAAQ;EAAE,GAAGC;AAAK,CAAC,KAAK;EAAAC,EAAA;EAC/D,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAe;IACrDW,OAAO,EAAE;EACX,CAAC,CAAC;EAEF,eAAeC,YAAYA,CAAEC,KAAuC,EAAE;IACpEA,KAAK,CAACC,cAAc,CAAC,CAAC;IAEtB,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMb,KAAK,CAACc,IAAI,CAAC,WAAW,EAAEP,QAAQ,CAAC;MAExD,IAAIM,QAAQ,CAACE,MAAM,KAAK,GAAG,EAAE;QAC3B;QACAP,WAAW,CAAC;UAAEC,OAAO,EAAE;QAAG,CAAC,CAAC;QAC5BO,KAAK,CAAC,6BAA6B,CAAC;MACtC,CAAC,MAAM;QACL,MAAM,IAAIC,KAAK,CAAC,uBAAuB,CAAC;MAC1C;IACF,CAAC,CAAC,OAAOC,KAAS,EAAE;MAClBC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAACT,OAAO,CAAC;MACtDO,KAAK,CAAC,gDAAgD,CAAC;IACzD;EACF;EAAC;EAED,SAASI,YAAYA,CAAET,KAA0C,EAAE;IACjE,MAAM;MAAEU,IAAI;MAAEC;IAAM,CAAC,GAAGX,KAAK,CAACY,MAAM;IACpCf,WAAW,CAACgB,SAAS,KAAK;MACxB,GAAGA,SAAS;MACZ,CAACH,IAAI,GAAGC;IACV,CAAC,CAAC,CAAC;IACHH,OAAO,CAACM,GAAG,CAAClB,QAAQ,CAAC;EACvB;EAAC;EAED,oBACEL,OAAA;IAAMwB,QAAQ,EAAEhB,YAAa;IAAAN,QAAA,gBAC3BF,OAAA;MAAOyB,IAAI,EAAC,MAAM;MAACC,QAAQ,EAAER;IAAa;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,EAC3C5B,QAAQ,eACTF,OAAA,CAACH,gBAAgB;MAAA8B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAmB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjC,CAAC;AAEX,CAAC;AAAC1B,EAAA,CAxCIH,YAA6B;AAAA8B,EAAA,GAA7B9B,YAA6B;AA0CnC,eAAeA,YAAY;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}