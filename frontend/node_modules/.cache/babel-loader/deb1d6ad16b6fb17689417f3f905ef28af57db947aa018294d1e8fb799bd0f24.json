{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = 'http://localhost:3001';\n\n// Create an instance of Axios with the base URL configured\nconst api = axios.create({\n  baseURL: API_BASE_URL\n});\nexport async function testServerConnection() {\n  try {} catch (error) {\n    console.error('Error sending data to server:', error);\n    throw error; // Optionally re-throw the error for the caller to handle\n  }\n}\nexport async function postNewEntry(payload) {\n  try {\n    console.log(\"Attempted payload: \", payload);\n    const response = await axios.post(`http://localhost:3001/newEntry`, payload);\n\n    // Handle the response if needed\n    console.log('Response from server:', response.data);\n  } catch (error) {\n    // Handle errors\n    console.error('Error sending data to server:', error);\n    throw error; // Optionally re-throw the error for the caller to handle\n  }\n}\n;","map":{"version":3,"names":["axios","API_BASE_URL","api","create","baseURL","testServerConnection","error","console","postNewEntry","payload","log","response","post","data"],"sources":["/Users/matthewcafiero/PersonalProjects/MemoryBox/frontend/src/services/serverConnection.ts"],"sourcesContent":["import axios from 'axios';\nimport { NewDataEntry } from '../../../types';\n\nconst API_BASE_URL = 'http://localhost:3001';\n\n// Create an instance of Axios with the base URL configured\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n});\n\nexport async function testServerConnection(): Promise<void> {\n  try {\n\n  } catch (error) {\n    console.error('Error sending data to server:', error);\n    throw error; // Optionally re-throw the error for the caller to handle\n  }\n}\n\nexport async function postNewEntry (payload:NewDataEntry): Promise<void> {\n  try {\n    console.log(\"Attempted payload: \", payload);\n\n    const response = await axios.post(`http://localhost:3001/newEntry`, payload);\n\n    // Handle the response if needed\n    console.log('Response from server:', response.data);\n  } catch (error) {\n    // Handle errors\n    console.error('Error sending data to server:', error);\n    throw error; // Optionally re-throw the error for the caller to handle\n  }\n};"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAGzB,MAAMC,YAAY,GAAG,uBAAuB;;AAE5C;AACA,MAAMC,GAAG,GAAGF,KAAK,CAACG,MAAM,CAAC;EACvBC,OAAO,EAAEH;AACX,CAAC,CAAC;AAEF,OAAO,eAAeI,oBAAoBA,CAAA,EAAkB;EAC1D,IAAI,CAEJ,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;IACrD,MAAMA,KAAK,CAAC,CAAC;EACf;AACF;AAEA,OAAO,eAAeE,YAAYA,CAAEC,OAAoB,EAAiB;EACvE,IAAI;IACFF,OAAO,CAACG,GAAG,CAAC,qBAAqB,EAAED,OAAO,CAAC;IAE3C,MAAME,QAAQ,GAAG,MAAMX,KAAK,CAACY,IAAI,CAAE,gCAA+B,EAAEH,OAAO,CAAC;;IAE5E;IACAF,OAAO,CAACG,GAAG,CAAC,uBAAuB,EAAEC,QAAQ,CAACE,IAAI,CAAC;EACrD,CAAC,CAAC,OAAOP,KAAK,EAAE;IACd;IACAC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;IACrD,MAAMA,KAAK,CAAC,CAAC;EACf;AACF;AAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}