{"ast":null,"code":"var _jsxFileName = \"/Users/matthewcafiero/PersonalProjects/MemoryBox/frontend/src/components/Entries.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport NewEntryForm from './NewEntryForm';\nimport Entry from './Entry';\nimport { getAllEntries } from '../services/serverConnection';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Entries = () => {\n  _s();\n  const [data, setData] = useState([]);\n\n  //After the render of the app, fetch the data stores on the servers\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const entries = await getAllEntries();\n        setData(entries);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n    fetchData();\n  }, []); // Empty dependency array ensures effect runs only once after initial render\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(NewEntryForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: data.map((entry, index) => /*#__PURE__*/_jsxDEV(Entry, {\n        DataEntry: entry\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(Entries, \"IEMTtLVFIuToo7X/raQbJAxzNQU=\");\n_c = Entries;\nexport default Entries;\nvar _c;\n$RefreshReg$(_c, \"Entries\");","map":{"version":3,"names":["React","useEffect","useState","NewEntryForm","Entry","getAllEntries","jsxDEV","_jsxDEV","Entries","_s","data","setData","fetchData","entries","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","map","entry","index","DataEntry","_c","$RefreshReg$"],"sources":["/Users/matthewcafiero/PersonalProjects/MemoryBox/frontend/src/components/Entries.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport NewEntryForm from './NewEntryForm';\nimport { DataEntry } from '../../../types';\nimport Entry from './Entry';\nimport { getAllEntries } from '../services/serverConnection';\n\ntype EntriesProps = {}\n\nconst Entries: React.FC<EntriesProps> = () => {\n  const [data, setData] = useState<DataEntry[]>([]);\n\n    //After the render of the app, fetch the data stores on the servers\n    useEffect(() => {\n      const fetchData = async () => {\n        try {\n          const entries = await getAllEntries();\n          setData(entries);\n        } catch (error) {\n          console.error('Error fetching data:', error);\n        }\n      };\n  \n      fetchData();\n    }, []); // Empty dependency array ensures effect runs only once after initial render\n\n  return (\n    <div>\n      <NewEntryForm />\n        <div>\n          {data.map((entry, index) => (\n            <Entry key={index} DataEntry={entry} />\n          ))}\n        </div>\n    </div>\n  );\n};\n\nexport default Entries;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,YAAY,MAAM,gBAAgB;AAEzC,OAAOC,KAAK,MAAM,SAAS;AAC3B,SAASC,aAAa,QAAQ,8BAA8B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAI7D,MAAMC,OAA+B,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAc,EAAE,CAAC;;EAE/C;EACAD,SAAS,CAAC,MAAM;IACd,MAAMW,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,MAAMC,OAAO,GAAG,MAAMR,aAAa,CAAC,CAAC;QACrCM,OAAO,CAACE,OAAO,CAAC;MAClB,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC9C;IACF,CAAC;IAEDF,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAEV,oBACEL,OAAA;IAAAS,QAAA,gBACET,OAAA,CAACJ,YAAY;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACdb,OAAA;MAAAS,QAAA,EACGN,IAAI,CAACW,GAAG,CAAC,CAACC,KAAK,EAAEC,KAAK,kBACrBhB,OAAA,CAACH,KAAK;QAAaoB,SAAS,EAAEF;MAAM,GAAxBC,KAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAqB,CACvC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEV,CAAC;AAACX,EAAA,CA3BID,OAA+B;AAAAiB,EAAA,GAA/BjB,OAA+B;AA6BrC,eAAeA,OAAO;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}