{"ast":null,"code":"var _jsxFileName = \"/Users/matthewcafiero/PersonalProjects/MemoryBox/frontend/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { getAllEntries } from './services/serverConnection';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  //After the render of the app, fetch the data stores on the servers\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const entries = await getAllEntries();\n        setData(entries);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n    fetchData();\n  }, []); // Empty dependency array ensures effect runs only once after initial render\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","getAllEntries","jsxDEV","_jsxDEV","App","_s","fetchData","entries","setData","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/matthewcafiero/PersonalProjects/MemoryBox/frontend/src/App.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport NewEntryForm from './components/NewEntryForm';\nimport { getAllEntries } from './services/serverConnection';\nimport Entry from './components/Entry';\nimport { DataEntry } from '../../types';\n\nfunction App() {\n\n  //After the render of the app, fetch the data stores on the servers\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const entries = await getAllEntries();\n        setData(entries);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n\n    fetchData();\n  }, []); // Empty dependency array ensures effect runs only once after initial render\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        \n      </header>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAkB,OAAO;AAElD,SAASC,aAAa,QAAQ,6BAA6B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAI5D,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAEb;EACAL,SAAS,CAAC,MAAM;IACd,MAAMM,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,MAAMC,OAAO,GAAG,MAAMN,aAAa,CAAC,CAAC;QACrCO,OAAO,CAACD,OAAO,CAAC;MAClB,CAAC,CAAC,OAAOE,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC9C;IACF,CAAC;IAEDH,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,oBACEH,OAAA;IAAKQ,SAAS,EAAC,KAAK;IAAAC,QAAA,eAClBT,OAAA;MAAQQ,SAAS,EAAC;IAAY;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEtB;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV;AAACX,EAAA,CAvBQD,GAAG;AAAAa,EAAA,GAAHb,GAAG;AAyBZ,eAAeA,GAAG;AAAC,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}