{"ast":null,"code":"var _jsxFileName = \"/Users/matthewcafiero/PersonalProjects/MemoryBox/frontend/src/components/Entry.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport DateLabel from \"./DateLabel\";\nimport { archiveEntry, editEntry } from \"../services/serverConnection\";\nimport { useMutation, useQueryClient } from \"react-query\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Entry = ({\n  entry,\n  ...otherProps\n}) => {\n  _s();\n  const queryClient = useQueryClient();\n  const [inEditingMode, setEditingMode] = useState(false);\n  const [textInputValue, setTextInputValue] = useState(entry.message);\n  const mutation = useMutation(archiveEntry, {\n    onSuccess: () => {\n      // Invalidating and refetching data after mutation succeeds (for the key of entries)\n      queryClient.invalidateQueries('entries');\n    }\n  });\n  type;\n  const saveEditsMutation = useMutation(editEntry, {\n    onSuccess: () => {\n      // Invalidating and refetching data after mutation succeeds (for the key of entries)\n      queryClient.invalidateQueries('entries');\n    }\n  });\n  const handleEditButtonClick = () => {\n    console.log(`Clicked edit button for entry with id of \"${entry.id}\"`);\n    setEditingMode(true);\n  };\n  const handleTextInputChange = e => {\n    setTextInputValue(e.target.value);\n  };\n  const handleCancelEditClick = () => {\n    setEditingMode(false);\n    setTextInputValue(entry.message);\n  };\n  const handleDeleteButtonClick = () => {\n    console.log(`Clicked delete button for entry with id of \"${entry.id}\"`);\n    mutation.mutate(entry.id);\n  };\n  if (inEditingMode) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"updateEntryInput\",\n          value: textInputValue,\n          onChange: handleTextInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleCancelEditClick,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(DateLabel, {\n      dateToDisplay: entry.dateObject\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this), entry.message, /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleEditButtonClick,\n      children: \"Edit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleDeleteButtonClick,\n      children: \"Delete\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n};\n_s(Entry, \"XDMoT4cAvzXItjlqVayrjctnO80=\", false, function () {\n  return [useQueryClient, useMutation, useMutation];\n});\n_c = Entry;\nexport default Entry;\nvar _c;\n$RefreshReg$(_c, \"Entry\");","map":{"version":3,"names":["React","useState","DateLabel","archiveEntry","editEntry","useMutation","useQueryClient","jsxDEV","_jsxDEV","Entry","entry","otherProps","_s","queryClient","inEditingMode","setEditingMode","textInputValue","setTextInputValue","message","mutation","onSuccess","invalidateQueries","type","saveEditsMutation","handleEditButtonClick","console","log","id","handleTextInputChange","e","target","value","handleCancelEditClick","handleDeleteButtonClick","mutate","children","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","dateToDisplay","dateObject","_c","$RefreshReg$"],"sources":["/Users/matthewcafiero/PersonalProjects/MemoryBox/frontend/src/components/Entry.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { DataEntry } from \"../../../types\";\nimport DateLabel from \"./DateLabel\";\nimport { archiveEntry, editEntry } from \"../services/serverConnection\";\nimport { useMutation, useQueryClient } from \"react-query\";\n\ntype EntryProps = {\n  entry: DataEntry,\n  key: string\n}\n\nconst Entry: React.FC<EntryProps> = ({entry, ...otherProps}) => {\n\n  const queryClient = useQueryClient();\n\n  const [inEditingMode, setEditingMode] = useState(false);\n  const [textInputValue, setTextInputValue] = useState(entry.message);\n\n  const mutation = useMutation<any, unknown, any>(\n    archiveEntry,\n    {\n      onSuccess: () => {\n        // Invalidating and refetching data after mutation succeeds (for the key of entries)\n        queryClient.invalidateQueries('entries');\n      },\n    }\n  );\n\n  type \n\n  const saveEditsMutation = useMutation<any, unknown, any>(\n    editEntry,\n    {\n      onSuccess: () => {\n        // Invalidating and refetching data after mutation succeeds (for the key of entries)\n        queryClient.invalidateQueries('entries');\n      },\n    }\n  )\n\n  const handleEditButtonClick = () => {\n    console.log(`Clicked edit button for entry with id of \"${entry.id}\"`);\n    setEditingMode(true);\n  }\n\n  const handleTextInputChange = (e:any) => {\n    setTextInputValue(e.target.value);\n  };\n\n  const handleCancelEditClick = () => {\n    setEditingMode(false);\n    setTextInputValue(entry.message);\n  }\n\n  const handleDeleteButtonClick = () => {\n    console.log(`Clicked delete button for entry with id of \"${entry.id}\"`);\n    mutation.mutate(entry.id);\n  }\n\n  if(inEditingMode){\n    return (\n      <div>\n        <form>\n          <input\n            type=\"text\"\n            id=\"updateEntryInput\"\n            value={textInputValue}\n            onChange={handleTextInputChange}\n          />\n          <button>Save</button>\n        </form>\n        <button onClick={handleCancelEditClick}>Cancel</button>\n      </div>\n    )\n  }\n\n  return (\n    <div>\n        <DateLabel dateToDisplay={entry.dateObject}/>\n        {entry.message}\n        <button onClick={handleEditButtonClick}>Edit</button>\n        <button onClick={handleDeleteButtonClick}>Delete</button>\n    </div>\n  )\n}\n\nexport default Entry;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}