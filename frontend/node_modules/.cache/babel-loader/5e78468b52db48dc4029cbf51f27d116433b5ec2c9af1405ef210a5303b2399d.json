{"ast":null,"code":"var _jsxFileName = \"/Users/matthewcafiero/PersonalProjects/MemoryBox/frontend/src/components/NewEntryForm.tsx\";\n// Form.tsx\n\nimport React, { useState } from 'react';\nimport SubmitFormButton from './SubmitFormButton';\n\n// Define props for the Form component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst [formData, setFormData] = useState({\n  message: ''\n});\nasync function handleSubmit(event) {\n  event.preventDefault();\n  try {\n    const response = await fetch('/api/user', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(formData)\n    });\n    if (!response.ok) {\n      throw new Error('Failed to submit form');\n    }\n\n    // Reset the form after successful submission\n    setFormData({\n      message: ''\n    });\n    alert('Form submitted successfully');\n  } catch (error) {\n    console.error('Error submitting form:', error.message);\n    alert('Failed to submit form. Please try again later.');\n  }\n}\n;\nfunction handleChange(event) {\n  const {\n    name,\n    value\n  } = event.target;\n  setFormData(prevState => ({\n    ...prevState,\n    [name]: value\n  }));\n}\n;\n\n// Reusable Form component\nconst NewEntryForm = ({\n  children,\n  ...rest\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), children, /*#__PURE__*/_jsxDEV(SubmitFormButton, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n_c = NewEntryForm;\nexport default NewEntryForm;\nvar _c;\n$RefreshReg$(_c, \"NewEntryForm\");","map":{"version":3,"names":["React","useState","SubmitFormButton","jsxDEV","_jsxDEV","formData","setFormData","message","handleSubmit","event","preventDefault","response","fetch","method","headers","body","JSON","stringify","ok","Error","alert","error","console","handleChange","name","value","target","prevState","NewEntryForm","children","rest","onSubmit","type","onChange","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/matthewcafiero/PersonalProjects/MemoryBox/frontend/src/components/NewEntryForm.tsx"],"sourcesContent":["// Form.tsx\n\nimport React, { FormHTMLAttributes, useState } from 'react';\nimport SubmitFormButton from './SubmitFormButton';\nimport {NewDataEntry} from  '../../../types';\n\n// Define props for the Form component\ntype props = FormHTMLAttributes<HTMLFormElement> & {\n\n};\n\nconst [formData, setFormData] = useState<NewDataEntry>({\n  message: ''\n});\n\nasync function handleSubmit (event: React.FormEvent<HTMLFormElement>) {\n  event.preventDefault();\n\n  try {\n    const response = await fetch('/api/user', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(formData)\n    });\n\n    if (!response.ok) {\n      throw new Error('Failed to submit form');\n    }\n\n    // Reset the form after successful submission\n    setFormData({\n      message: ''\n    });\n\n    alert('Form submitted successfully');\n  } catch (error:any) {\n    console.error('Error submitting form:', error.message);\n    alert('Failed to submit form. Please try again later.');\n  }\n};\n\nfunction handleChange (event: React.ChangeEvent<HTMLInputElement>) {\n  const { name, value } = event.target;\n  setFormData(prevState => ({\n    ...prevState,\n    [name]: value\n  }));\n};\n\n// Reusable Form component\nconst NewEntryForm: React.FC<props> = ({ children, ...rest }) => {\n  return (\n    <form onSubmit={handleSubmit} >\n      <input type=\"text\" onChange={handleChange}/>\n      {children}\n      <SubmitFormButton></SubmitFormButton>\n    </form>\n  );\n};\n\nexport default NewEntryForm;\n"],"mappings":";AAAA;;AAEA,OAAOA,KAAK,IAAwBC,QAAQ,QAAQ,OAAO;AAC3D,OAAOC,gBAAgB,MAAM,oBAAoB;;AAGjD;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAKA,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGL,QAAQ,CAAe;EACrDM,OAAO,EAAE;AACX,CAAC,CAAC;AAEF,eAAeC,YAAYA,CAAEC,KAAuC,EAAE;EACpEA,KAAK,CAACC,cAAc,CAAC,CAAC;EAEtB,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,WAAW,EAAE;MACxCC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACZ,QAAQ;IAC/B,CAAC,CAAC;IAEF,IAAI,CAACM,QAAQ,CAACO,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,uBAAuB,CAAC;IAC1C;;IAEA;IACAb,WAAW,CAAC;MACVC,OAAO,EAAE;IACX,CAAC,CAAC;IAEFa,KAAK,CAAC,6BAA6B,CAAC;EACtC,CAAC,CAAC,OAAOC,KAAS,EAAE;IAClBC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAACd,OAAO,CAAC;IACtDa,KAAK,CAAC,gDAAgD,CAAC;EACzD;AACF;AAAC;AAED,SAASG,YAAYA,CAAEd,KAA0C,EAAE;EACjE,MAAM;IAAEe,IAAI;IAAEC;EAAM,CAAC,GAAGhB,KAAK,CAACiB,MAAM;EACpCpB,WAAW,CAACqB,SAAS,KAAK;IACxB,GAAGA,SAAS;IACZ,CAACH,IAAI,GAAGC;EACV,CAAC,CAAC,CAAC;AACL;AAAC;;AAED;AACA,MAAMG,YAA6B,GAAGA,CAAC;EAAEC,QAAQ;EAAE,GAAGC;AAAK,CAAC,KAAK;EAC/D,oBACE1B,OAAA;IAAM2B,QAAQ,EAAEvB,YAAa;IAAAqB,QAAA,gBAC3BzB,OAAA;MAAO4B,IAAI,EAAC,MAAM;MAACC,QAAQ,EAAEV;IAAa;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,EAC3CR,QAAQ,eACTzB,OAAA,CAACF,gBAAgB;MAAAgC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAmB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjC,CAAC;AAEX,CAAC;AAACC,EAAA,GARIV,YAA6B;AAUnC,eAAeA,YAAY;AAAC,IAAAU,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}