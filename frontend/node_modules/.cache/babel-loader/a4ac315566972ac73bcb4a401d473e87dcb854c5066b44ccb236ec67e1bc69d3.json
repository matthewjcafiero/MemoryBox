{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = 'http://localhost:YOUR_API_PORT';\n\n// Create an instance of Axios with the base URL configured\nconst api = axios.create({\n  baseURL: API_BASE_URL\n});\nexport async function postNewEntry(payload) {\n  try {\n    const response = await axios.post(`${API_BASE_URL}/your/post/endpoint`, payload);\n\n    // Handle the response if needed\n    console.log('Response from server:', response.data);\n  } catch (error) {\n    // Handle errors\n    console.error('Error sending data to server:', error);\n    throw error; // Optionally re-throw the error for the caller to handle\n  }\n}\n;","map":{"version":3,"names":["axios","API_BASE_URL","api","create","baseURL","postNewEntry","payload","response","post","console","log","data","error"],"sources":["/Users/matthewcafiero/PersonalProjects/MemoryBox/frontend/src/services/serverConnection.ts"],"sourcesContent":["import axios from 'axios';\nimport { NewDataEntry } from '../../../types';\n\nconst API_BASE_URL = 'http://localhost:YOUR_API_PORT';\n\n// Create an instance of Axios with the base URL configured\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n});\n\nexport async function postNewEntry (payload:NewDataEntry): Promise<void> {\n  try {\n    const response = await axios.post(`${API_BASE_URL}/your/post/endpoint`, payload);\n\n    // Handle the response if needed\n    console.log('Response from server:', response.data);\n  } catch (error) {\n    // Handle errors\n    console.error('Error sending data to server:', error);\n    throw error; // Optionally re-throw the error for the caller to handle\n  }\n};"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAGzB,MAAMC,YAAY,GAAG,gCAAgC;;AAErD;AACA,MAAMC,GAAG,GAAGF,KAAK,CAACG,MAAM,CAAC;EACvBC,OAAO,EAAEH;AACX,CAAC,CAAC;AAEF,OAAO,eAAeI,YAAYA,CAAEC,OAAoB,EAAiB;EACvE,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMP,KAAK,CAACQ,IAAI,CAAE,GAAEP,YAAa,qBAAoB,EAAEK,OAAO,CAAC;;IAEhF;IACAG,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAEH,QAAQ,CAACI,IAAI,CAAC;EACrD,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd;IACAH,OAAO,CAACG,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;IACrD,MAAMA,KAAK,CAAC,CAAC;EACf;AACF;AAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}