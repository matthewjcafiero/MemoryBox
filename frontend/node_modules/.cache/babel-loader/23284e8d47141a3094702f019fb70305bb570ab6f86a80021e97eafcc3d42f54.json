{"ast":null,"code":"var _jsxFileName = \"/Users/matthewcafiero/PersonalProjects/MemoryBox/frontend/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport NewEntryForm from './components/NewEntryForm';\nimport { getAllEntries } from './services/serverConnection';\nimport Entry from './components/Entry';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const entries = await getAllEntries();\n        setData(entries.values());\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n    fetchData();\n  }, []); // Empty dependency array ensures effect runs only once after initial render\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(NewEntryForm, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: data.map((entry, index) => /*#__PURE__*/_jsxDEV(Entry, {\n          DataEntry: entry\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"IEMTtLVFIuToo7X/raQbJAxzNQU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","NewEntryForm","getAllEntries","Entry","jsxDEV","_jsxDEV","App","_s","data","setData","fetchData","entries","values","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","entry","index","DataEntry","_c","$RefreshReg$"],"sources":["/Users/matthewcafiero/PersonalProjects/MemoryBox/frontend/src/App.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport NewEntryForm from './components/NewEntryForm';\nimport { getAllEntries } from './services/serverConnection';\nimport Entry from './components/Entry';\nimport { DataEntry } from '../../types';\n\nfunction App() {\n  const [data, setData] = useState<DataEntry[]>([]);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const entries = await getAllEntries();\n        setData(entries.values());\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n\n    fetchData();\n  }, []); // Empty dependency array ensures effect runs only once after initial render\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <NewEntryForm />\n        <div>\n          {data.map((entry, index) => (\n            <Entry key={index} DataEntry={entry} />\n          ))}\n        </div>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,YAAY,MAAM,2BAA2B;AACpD,SAASC,aAAa,QAAQ,6BAA6B;AAC3D,OAAOC,KAAK,MAAM,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGvC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAc,EAAE,CAAC;EAEjDD,SAAS,CAAC,MAAM;IACd,MAAMW,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,MAAMC,OAAO,GAAG,MAAMT,aAAa,CAAC,CAAC;QACrCO,OAAO,CAACE,OAAO,CAACC,MAAM,CAAC,CAAC,CAAC;MAC3B,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC9C;IACF,CAAC;IAEDH,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,oBACEL,OAAA;IAAKU,SAAS,EAAC,KAAK;IAAAC,QAAA,eAClBX,OAAA;MAAQU,SAAS,EAAC,YAAY;MAAAC,QAAA,gBAC5BX,OAAA,CAACJ,YAAY;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAChBf,OAAA;QAAAW,QAAA,EACGR,IAAI,CAACa,GAAG,CAAC,CAACC,KAAK,EAAEC,KAAK,kBACrBlB,OAAA,CAACF,KAAK;UAAaqB,SAAS,EAAEF;QAAM,GAAxBC,KAAK;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAqB,CACvC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV;AAACb,EAAA,CA5BQD,GAAG;AAAAmB,EAAA,GAAHnB,GAAG;AA8BZ,eAAeA,GAAG;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}