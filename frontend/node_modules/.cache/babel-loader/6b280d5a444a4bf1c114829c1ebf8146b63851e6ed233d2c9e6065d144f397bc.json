{"ast":null,"code":"var _jsxFileName = \"/Users/matthewcafiero/PersonalProjects/MemoryBox/frontend/src/components/TagInput.tsx\";\nimport React from \"react\";\nimport CreatableSelect from \"react-select/creatable\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TagInput = ({\n  tagOptions\n}) => {\n  //TODO: should I pass the react-query items for from the parent tags so I can handle is loading, etc, etc\n  //but if I do, should I not just pull the tags directly here rather than in the parent?\n  if (!tagOptions) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"No data found\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 28\n  }, this);\n  let options = tagOptions === null || tagOptions === void 0 ? void 0 : tagOptions.map(tag => {\n    return {\n      value: tag.text,\n      label: tag.text\n    };\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(CreatableSelect, {\n      isMulti: true,\n      options: options\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n_c = TagInput;\nexport default TagInput;\nvar _c;\n$RefreshReg$(_c, \"TagInput\");","map":{"version":3,"names":["React","CreatableSelect","jsxDEV","_jsxDEV","TagInput","tagOptions","children","fileName","_jsxFileName","lineNumber","columnNumber","options","map","tag","value","text","label","isMulti","_c","$RefreshReg$"],"sources":["/Users/matthewcafiero/PersonalProjects/MemoryBox/frontend/src/components/TagInput.tsx"],"sourcesContent":["import React from \"react\";\nimport CreatableSelect from \"react-select/creatable\";\nimport { TagObject } from \"../../../types\";\n\ntype TagInputProps = {\n  tagOptions: TagObject[] | undefined; //TODO: do we want to allow undefined to be a valid inout for TagInput components, or should we handle that before and never have it reach the component\n\n}\n\nconst TagInput: React.FC<TagInputProps> = ({tagOptions}) => {\n\n  //TODO: should I pass the react-query items for from the parent tags so I can handle is loading, etc, etc\n  //but if I do, should I not just pull the tags directly here rather than in the parent?\n  if (!tagOptions) return (<div>No data found</div>)\n\n  let options = tagOptions?.map((tag:TagObject) => {\n    return {value: tag.text, label: tag.text}\n  })\n\n  return(\n    <div>\n        <CreatableSelect \n          isMulti\n          options={options}\n        />\n    </div>\n  )\n} \n\nexport default TagInput;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,eAAe,MAAM,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAQrD,MAAMC,QAAiC,GAAGA,CAAC;EAACC;AAAU,CAAC,KAAK;EAE1D;EACA;EACA,IAAI,CAACA,UAAU,EAAE,oBAAQF,OAAA;IAAAG,QAAA,EAAK;EAAa;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;EAEjD,IAAIC,OAAO,GAAGN,UAAU,aAAVA,UAAU,uBAAVA,UAAU,CAAEO,GAAG,CAAEC,GAAa,IAAK;IAC/C,OAAO;MAACC,KAAK,EAAED,GAAG,CAACE,IAAI;MAAEC,KAAK,EAAEH,GAAG,CAACE;IAAI,CAAC;EAC3C,CAAC,CAAC;EAEF,oBACEZ,OAAA;IAAAG,QAAA,eACIH,OAAA,CAACF,eAAe;MACdgB,OAAO;MACPN,OAAO,EAAEA;IAAQ;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClB;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEV,CAAC;AAAAQ,EAAA,GAlBKd,QAAiC;AAoBvC,eAAeA,QAAQ;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}