{"ast":null,"code":"var _jsxFileName = \"/Users/matthewcafiero/PersonalProjects/MemoryBox/frontend/src/components/TagInput.tsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport CreatableSelect from \"react-select/creatable\";\nimport { useQuery } from \"react-query\";\nimport { getAllTags } from \"../services/serverConnection\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TagInput = ({\n  selectedTags\n}) => {\n  _s();\n  const {\n    data,\n    error,\n    isLoading\n  } = useQuery('tags', getAllTags);\n  let tags = data;\n\n  //TODO: should I pass the react-query items for from the parent tags so I can handle is loading, etc, etc\n  //but if I do, should I not just pull the tags directly here rather than in the parent? \n  //I kinda think we should pull here, just like how for the monthPicker we build the months in the component itselft\n  if (!tags) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"No data found\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 22\n  }, this);\n  let options = tags === null || tags === void 0 ? void 0 : tags.map(tag => {\n    return {\n      value: tag,\n      label: tag.text\n    };\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(CreatableSelect, {\n      isMulti: true,\n      options: options\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(TagInput, \"vamb9feK/asxjJLX6wcKCD8DQJA=\", false, function () {\n  return [useQuery];\n});\n_c = TagInput;\nexport default TagInput;\nvar _c;\n$RefreshReg$(_c, \"TagInput\");","map":{"version":3,"names":["React","CreatableSelect","useQuery","getAllTags","jsxDEV","_jsxDEV","TagInput","selectedTags","_s","data","error","isLoading","tags","children","fileName","_jsxFileName","lineNumber","columnNumber","options","map","tag","value","label","text","isMulti","_c","$RefreshReg$"],"sources":["/Users/matthewcafiero/PersonalProjects/MemoryBox/frontend/src/components/TagInput.tsx"],"sourcesContent":["import React from \"react\";\nimport CreatableSelect from \"react-select/creatable\";\nimport { TagObject } from \"../../../types\";\nimport { useQuery } from \"react-query\";\nimport { getAllTags } from \"../services/serverConnection\";\n\ntype TagInputProps = {\n  //TODO: do we want to allow undefined to be a valid inout for TagInput components, or should we handle that before and never have it reach the component\n  selectedTags: TagObject[],\n  setSelectedTags: any\n}\n\nconst TagInput: React.FC<TagInputProps> = ({selectedTags}) => {\n  \n\n  const { data, error, isLoading } = useQuery('tags', getAllTags);\n  let tags = data;\n\n  //TODO: should I pass the react-query items for from the parent tags so I can handle is loading, etc, etc\n  //but if I do, should I not just pull the tags directly here rather than in the parent? \n  //I kinda think we should pull here, just like how for the monthPicker we build the months in the component itselft\n  if (!tags) return (<div>No data found</div>)\n\n    \n\n  let options = tags?.map((tag:TagObject) => {\n    return {value: tag, label: tag.text}\n  })\n\n  return(\n    <div>\n        <CreatableSelect \n          isMulti\n          options={options}\n        />\n    </div>\n  )\n} \n\nexport default TagInput;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,eAAe,MAAM,wBAAwB;AAEpD,SAASC,QAAQ,QAAQ,aAAa;AACtC,SAASC,UAAU,QAAQ,8BAA8B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAQ1D,MAAMC,QAAiC,GAAGA,CAAC;EAACC;AAAY,CAAC,KAAK;EAAAC,EAAA;EAG5D,MAAM;IAAEC,IAAI;IAAEC,KAAK;IAAEC;EAAU,CAAC,GAAGT,QAAQ,CAAC,MAAM,EAAEC,UAAU,CAAC;EAC/D,IAAIS,IAAI,GAAGH,IAAI;;EAEf;EACA;EACA;EACA,IAAI,CAACG,IAAI,EAAE,oBAAQP,OAAA;IAAAQ,QAAA,EAAK;EAAa;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;EAI3C,IAAIC,OAAO,GAAGN,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEO,GAAG,CAAEC,GAAa,IAAK;IACzC,OAAO;MAACC,KAAK,EAAED,GAAG;MAAEE,KAAK,EAAEF,GAAG,CAACG;IAAI,CAAC;EACtC,CAAC,CAAC;EAEF,oBACElB,OAAA;IAAAQ,QAAA,eACIR,OAAA,CAACJ,eAAe;MACduB,OAAO;MACPN,OAAO,EAAEA;IAAQ;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClB;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEV,CAAC;AAAAT,EAAA,CAzBKF,QAAiC;EAAA,QAGFJ,QAAQ;AAAA;AAAAuB,EAAA,GAHvCnB,QAAiC;AA2BvC,eAAeA,QAAQ;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}