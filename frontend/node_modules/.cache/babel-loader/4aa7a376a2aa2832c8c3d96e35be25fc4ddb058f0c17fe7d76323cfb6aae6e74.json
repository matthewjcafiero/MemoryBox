{"ast":null,"code":"var _jsxFileName = \"/Users/matthewcafiero/PersonalProjects/MemoryBox/frontend/src/components/NewEntryForm.tsx\";\n// Form.tsx\n\nimport React, { useState } from 'react';\nimport SubmitFormButton from './SubmitFormButton';\n\n// Define props for the Form component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst [formData, setFormData] = useState({\n  username: '',\n  email: '',\n  password: ''\n});\nconst handleSubmit = async event => {\n  event.preventDefault();\n  try {\n    const response = await fetch('/api/user', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(formData)\n    });\n    if (!response.ok) {\n      throw new Error('Failed to submit form');\n    }\n\n    // Reset the form after successful submission\n    setFormData({\n      username: '',\n      email: '',\n      password: ''\n    });\n    alert('Form submitted successfully');\n  } catch (error) {\n    console.error('Error submitting form:', error.message);\n    alert('Failed to submit form. Please try again later.');\n  }\n};\nconst handleChange = event => {\n  const {\n    name,\n    value\n  } = event.target;\n  setFormData(prevState => ({\n    ...prevState,\n    [name]: value\n  }));\n};\n\n// Reusable Form component\nconst NewEntryForm = ({\n  children,\n  ...rest\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"form\",\n    ...rest,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), children, /*#__PURE__*/_jsxDEV(SubmitFormButton, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n_c = NewEntryForm;\nexport default NewEntryForm;\nvar _c;\n$RefreshReg$(_c, \"NewEntryForm\");","map":{"version":3,"names":["React","useState","SubmitFormButton","jsxDEV","_jsxDEV","formData","setFormData","username","email","password","handleSubmit","event","preventDefault","response","fetch","method","headers","body","JSON","stringify","ok","Error","alert","error","console","message","handleChange","name","value","target","prevState","NewEntryForm","children","rest","className","type","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/matthewcafiero/PersonalProjects/MemoryBox/frontend/src/components/NewEntryForm.tsx"],"sourcesContent":["// Form.tsx\n\nimport React, { FormHTMLAttributes, useState } from 'react';\nimport SubmitFormButton from './SubmitFormButton';\nimport {NewDataEntry} from  '../../types';\n\n// Define props for the Form component\ntype props = FormHTMLAttributes<HTMLFormElement> & {\n\n};\n\nconst [formData, setFormData] = useState<NewDataEntry>({\n  username: '',\n  email: '',\n  password: ''\n});\n\nconst handleSubmit = async (event: React.FormEvent<HTMLFormElement>) => {\n  event.preventDefault();\n\n  try {\n    const response = await fetch('/api/user', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(formData)\n    });\n\n    if (!response.ok) {\n      throw new Error('Failed to submit form');\n    }\n\n    // Reset the form after successful submission\n    setFormData({\n      username: '',\n      email: '',\n      password: ''\n    });\n\n    alert('Form submitted successfully');\n  } catch (error) {\n    console.error('Error submitting form:', error.message);\n    alert('Failed to submit form. Please try again later.');\n  }\n};\n\nconst handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n  const { name, value } = event.target;\n  setFormData(prevState => ({\n    ...prevState,\n    [name]: value\n  }));\n};\n\n// Reusable Form component\nconst NewEntryForm: React.FC<props> = ({ children, ...rest }) => {\n  return (\n    <form className=\"form\" {...rest}>\n      <input type=\"text\" />\n      {children}\n      <SubmitFormButton></SubmitFormButton>\n    </form>\n  );\n};\n\nexport default NewEntryForm;\n"],"mappings":";AAAA;;AAEA,OAAOA,KAAK,IAAwBC,QAAQ,QAAQ,OAAO;AAC3D,OAAOC,gBAAgB,MAAM,oBAAoB;;AAGjD;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAKA,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGL,QAAQ,CAAe;EACrDM,QAAQ,EAAE,EAAE;EACZC,KAAK,EAAE,EAAE;EACTC,QAAQ,EAAE;AACZ,CAAC,CAAC;AAEF,MAAMC,YAAY,GAAG,MAAOC,KAAuC,IAAK;EACtEA,KAAK,CAACC,cAAc,CAAC,CAAC;EAEtB,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,WAAW,EAAE;MACxCC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACd,QAAQ;IAC/B,CAAC,CAAC;IAEF,IAAI,CAACQ,QAAQ,CAACO,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,uBAAuB,CAAC;IAC1C;;IAEA;IACAf,WAAW,CAAC;MACVC,QAAQ,EAAE,EAAE;MACZC,KAAK,EAAE,EAAE;MACTC,QAAQ,EAAE;IACZ,CAAC,CAAC;IAEFa,KAAK,CAAC,6BAA6B,CAAC;EACtC,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAACE,OAAO,CAAC;IACtDH,KAAK,CAAC,gDAAgD,CAAC;EACzD;AACF,CAAC;AAED,MAAMI,YAAY,GAAIf,KAA0C,IAAK;EACnE,MAAM;IAAEgB,IAAI;IAAEC;EAAM,CAAC,GAAGjB,KAAK,CAACkB,MAAM;EACpCvB,WAAW,CAACwB,SAAS,KAAK;IACxB,GAAGA,SAAS;IACZ,CAACH,IAAI,GAAGC;EACV,CAAC,CAAC,CAAC;AACL,CAAC;;AAED;AACA,MAAMG,YAA6B,GAAGA,CAAC;EAAEC,QAAQ;EAAE,GAAGC;AAAK,CAAC,KAAK;EAC/D,oBACE7B,OAAA;IAAM8B,SAAS,EAAC,MAAM;IAAA,GAAKD,IAAI;IAAAD,QAAA,gBAC7B5B,OAAA;MAAO+B,IAAI,EAAC;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EACpBP,QAAQ,eACT5B,OAAA,CAACF,gBAAgB;MAAAkC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAmB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjC,CAAC;AAEX,CAAC;AAACC,EAAA,GARIT,YAA6B;AAUnC,eAAeA,YAAY;AAAC,IAAAS,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}